name: build & package

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Build:
    # convert this to a matrix if builds differ between platforms
    strategy:
      matrix:
        os: [ubuntu-22.04-arm, windows-11-arm] #[ubuntu-22.04, windows-latest, macos-latest, macos-13]
        mode: [release, debug]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out the repo
        uses: actions/checkout@v4

      - name: Set TAG_NAME env var
        shell: sh
        run: echo "TAG_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Set PKG_NAME env var
        shell: sh
        run: echo "PKG_NAME=tcl" >> $GITHUB_ENV

## Windows ##

      - name: Setup MSYS2 in Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: msys2/setup-msys2@v2
        # https://github.com/msys2/setup-msys2?tab=readme-ov-file#build-matrix
        with:
          msystem: CLANG64
          pacboy: |
            make: diffutils: patch: clang

      - name: Building in Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        shell: msys2 {0}
        env:
          BUILD_MODE: ${{ matrix.mode }}
        run: |
          (cd "$(dirname "$(which clang)")" && ln -s clang gcc && ln -s clang++ g++)
          sh build.sh

## Linux/Ubuntu ##

      - name: Show info on Ubuntu
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: dpkg -l | grep -E ' gcc| clang'

      - name: Building in Linux
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        env:
          BUILD_MODE: ${{ matrix.mode }}
          CC: clang-15
          CXX: clang-15++
        run: sh build.sh

## macOS ##

      - name: Building in macOS
        if: ${{ startsWith(matrix.os, 'macos') }}
        env:
          BUILD_MODE: ${{ matrix.mode }}
        run: sh build.sh

## General ##

      - name: Upload log for debugging configure step
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: config-log_${{ matrix.os }}_${{ matrix.mode }}
          path: config.log

      - name: Quick test
        shell: sh
        run: |
            TCLSH=$(find ./$PKG_NAME/bin/ -type f -name 'tclsh8.4*')
            echo "puts hello_world; exit;" | $TCLSH

      - name: Upload package for publishing job
        uses: actions/upload-artifact@v4
        with:
          name: package_${{ matrix.os }}_${{ matrix.mode }}
          path: |
              *.tar.xz

  Publish:
    needs: [Build]
    runs-on: 'ubuntu-latest'
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: package_*
          merge-multiple: true
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.tar.xz
